#!/bin/bash

# CLIA MCP Configuration Checker
# Verifica se os servidores MCP necess√°rios est√£o dispon√≠veis

echo "üîç CLIA MCP Configuration Checker"
echo "=================================="
echo ""

# Fun√ß√£o para verificar comando
check_command() {
    local cmd=$1
    local name=$2
    
    if command -v "$cmd" &> /dev/null; then
        echo "‚úÖ $name: Dispon√≠vel"
        return 0
    else
        echo "‚ùå $name: N√ÉO dispon√≠vel"
        return 1
    fi
}

# Fun√ß√£o para verificar arquivo
check_file() {
    local file=$1
    local name=$2
    
    if [ -f "$file" ]; then
        echo "‚úÖ $name: Encontrado"
        return 0
    else
        echo "‚ùå $name: N√ÉO encontrado"
        return 1
    fi
}

# Verificar depend√™ncias b√°sicas
echo "üìã Verificando depend√™ncias b√°sicas:"
check_command "node" "Node.js"
check_command "npm" "NPM"
check_command "git" "Git"
echo ""

# Verificar Semgrep
echo "üîí Verificando Semgrep:"
if check_command "semgrep" "Semgrep"; then
    echo "   Vers√£o: $(semgrep --version)"
else
    echo "   üí° Instale com: pip install semgrep"
fi
echo ""

# Verificar arquivos de configura√ß√£o
echo "‚öôÔ∏è Verificando configura√ß√£o:"
check_file "clia.config.json" "Configura√ß√£o do CLIA"
check_file "package.json" "Package.json"

if [ -f "clia.config.json" ]; then
    if grep -q "semgrep" clia.config.json; then
        echo "‚úÖ Semgrep MCP: Configurado"
    else
        echo "‚ùå Semgrep MCP: N√ÉO configurado"
    fi
    
    if grep -q "stack-detector" clia.config.json; then
        echo "‚úÖ Stack Detector MCP: Configurado"
    else
        echo "‚ùå Stack Detector MCP: N√ÉO configurado"
    fi
fi
echo ""

# Verificar MCPs externos (opcional)
echo "üåê Verificando MCPs externos (opcionais):"
check_command "gh" "GitHub CLI"

if npm list -g @modelcontextprotocol/server-github &> /dev/null; then
    echo "‚úÖ GitHub MCP Server: Instalado"
else
    echo "‚ùå GitHub MCP Server: N√ÉO instalado"
    echo "   üí° Instale com: npm install -g @modelcontextprotocol/server-github"
fi
echo ""

# Testar CLIA
echo "üß™ Testando CLIA:"
if [ -f "dist/index.js" ]; then
    echo "‚úÖ CLIA: Compilado"
    echo "   üí° Execute: npm start -- --help"
elif [ -f "src/index.ts" ]; then
    echo "‚ö†Ô∏è CLIA: C√≥digo fonte dispon√≠vel (requer compila√ß√£o)"
    echo "   üí° Execute: npm run build"
else
    echo "‚ùå CLIA: N√ÉO encontrado"
fi
echo ""

# Resumo
echo "üìä Resumo da configura√ß√£o:"
echo "========================="

# Verificar se Semgrep est√° funcionando
if command -v semgrep &> /dev/null; then
    echo "‚úÖ An√°lise de seguran√ßa: Funcionar√° (Semgrep dispon√≠vel)"
else
    echo "‚ùå An√°lise de seguran√ßa: N√ÉO funcionar√° (Semgrep ausente)"
fi

echo "‚úÖ Detec√ß√£o de stack: Funcionar√° (implementa√ß√£o local)"

if command -v gh &> /dev/null && npm list -g @modelcontextprotocol/server-github &> /dev/null; then
    echo "‚úÖ Integra√ß√£o GitHub: Funcionar√°"
else
    echo "‚ö†Ô∏è Integra√ß√£o GitHub: Funcionalidade limitada"
fi

echo "‚ö†Ô∏è StackOverflow: Aguardando servidor MCP da comunidade"
echo "‚ö†Ô∏è Context7: Requer conectividade com servi√ßo externo"
echo ""

echo "üöÄ Para come√ßar:"
echo "  1. npm run build"
echo "  2. npm start -- security-scan"
echo "  3. npm start -- stack"